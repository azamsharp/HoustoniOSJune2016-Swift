//
//  MapsViewController.swift
//  HoustoniOSJune2016-Swift
//
//  Created by Mohammad Azam on 7/26/16.
//  Copyright Â© 2016 Mohammad Azam. All rights reserved.
//

import UIKit
import MapKit
import CoreLocation

class MapsViewController: UIViewController, MKMapViewDelegate, CLLocationManagerDelegate {

@IBOutlet weak var mapView :MKMapView!

var locationManager :CLLocationManager!

override func viewDidLoad() {
super.viewDidLoad()

self.locationManager = CLLocationManager()
self.locationManager.delegate = self

self.locationManager.desiredAccuracy = kCLLocationAccuracyBest
self.locationManager.distanceFilter = kCLDistanceFilterNone

self.mapView.delegate = self
self.mapView.showsUserLocation = true

// ask for authorization
self.locationManager.requestWhenInUseAuthorization()

self.locationManager.startUpdatingLocation()

// Do any additional setup after loading the view.
}

@IBAction func addAnnotation() {

let annotation = MKPointAnnotation()
annotation.title = "This is my annotation"

annotation.coordinate = self.mapView.userLocation.coordinate

self.mapView.addAnnotation(annotation)

// let latDelta = rand() * (0.035/Double(RAND_MAX)) - 0.02

// let longDelta = rand() * (0.03/RAND_MAX) - 0.015

}

func mapView(mapView: MKMapView, didSelectAnnotationView view: MKAnnotationView) {

}

private func getDetailCalloutView() -> UIView {

let view = UIView(frame: CGRect(x: 0, y: 0, width: 300, height: 300))
view.backgroundColor = UIColor.greenColor()

let widthConstraint = NSLayoutConstraint(item: view, attribute: .Width, relatedBy: .Equal, toItem: nil, attribute: .NotAnAttribute, multiplier: 1, constant: 300)
view.addConstraint(widthConstraint)

let heightConstraint = NSLayoutConstraint(item: view, attribute: .Height, relatedBy: .Equal, toItem: nil, attribute: .NotAnAttribute, multiplier: 1, constant: 300)
view.addConstraint(heightConstraint)

return view

}

func mapView(mapView: MKMapView, viewForAnnotation annotation: MKAnnotation) -> MKAnnotationView? {

if annotation is MKUserLocation {
return nil
}

var pizzaAnnotationView = self.mapView.dequeueReusableAnnotationViewWithIdentifier("PizzaAnnotationView")

if pizzaAnnotationView == nil {
pizzaAnnotationView = PizzaAnnotationView(annotation: annotation, reuseIdentifier: "PizzaAnnotationView")
}

pizzaAnnotationView!.canShowCallout = true
pizzaAnnotationView?.detailCalloutAccessoryView = getDetailCalloutView()

return pizzaAnnotationView
}


func mapView(mapView: MKMapView, didAddAnnotationViews views: [MKAnnotationView]) {

if let annotationView = views.first {

if let annotation = annotationView.annotation {
if annotation is MKUserLocation {

// zoom into the user

let region = MKCoordinateRegionMakeWithDistance(annotation.coordinate, 250, 250)

self.mapView.setRegion(region, animated: true)

}
}

}

}

override func didReceiveMemoryWarning() {
super.didReceiveMemoryWarning()
// Dispose of any resources that can be recreated.
}


/*
// MARK: - Navigation

// In a storyboard-based application, you will often want to do a little preparation before navigation
override func prepareForSegue(segue: UIStoryboardSegue, sender: AnyObject?) {
// Get the new view controller using segue.destinationViewController.
// Pass the selected object to the new view controller.
}
*/

}
